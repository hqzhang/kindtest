
properties([
   pipelineTriggers([githubPush()]),
   parameters([
           choice(name: 'choice1', choices: ['dev','qa','prod'], description: 'input cluster'),
           choice(name: 'ocversion', choices: ['oc-3.9.0','oc-3.10.0'], description: 'input oc version'),

					 ])
		])
pipeline {
    agent any
    
    options { timestamps () }
    environment { 
       //define global variable
       PATH="/usr/local/bin:$PATH"
       myvar='helloworld'
       private_key='afb3704a-da55-4576-9fb9-9a6265319f2b'
       dockerCred='	48bc6aae-d8cc-43ce-8eac-6d9bd209a8be'
       app=nginx-openshift
       org=wavecloud
       image=$myorg/$myapp
       port=8081

    }

    stages {
        stage('Stage: Run Ansible Playbook'){
            steps { 
                script {
                    echo "Stage: Initial and Clean..."
                    echo "Input Parameters: ${params}"
                    withCredentials([usernamePassword(credentialsId: 'dockerCred', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh """
                            echo "scp dockerfile"
                            scp Dockerfile root@192.168.2.38:~/workspace

                            echo "build docker"
                            ssh root@192.168.2.38 docker login -u$USERNAME -p$PASSWORD

                            echo "push docker"
                            ssh root@192.168.2.38 docker push $image  .

                            echo "create dep "
                            kubectl create deployment $app --image=$image --port=$port
                            
                            echo "create svc"
                            kubectl expose deployment $app --target-port=$port --type=NodePort

                            echo "port forward "
                            kubectl port-forward service/nginx 8888:$port &

                            echo "verify docker"
                            ssh root@192.168.2.38 curl localhost:8888
                            
                            echo "clean port-forward"
                            #??
                            """
                           }
						}
					}
				}

	}
}
